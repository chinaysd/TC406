C51 COMPILER V9.00   MSGE                                                                  05/24/2018 15:04:23 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MSGE
OBJECT MODULE PLACED IN .\Objects\msge.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE ..\bsp\message\msge.c BROWSE INCDIR(..\pro;..\app;..\bsp;..\lib\inc;..\bsp\
                    -pushrod;..\bsp\message;..\bsp\sw_i2c) DEBUG OBJECTEXTEND PRINT(.\Listings\msge.lst) OBJECT(.\Objects\msge.obj)

line level    source

   1          #include "msge.h"
   2          
   3          static  XDATA INT8U Motor_Ctr[MSGE_NUM][2];
   4          static  XDATA INT8U FreCnt[MSGE_NUM],Mode_SwCnt[MSGE_NUM];
   5          static  XDATA INT16U TimeCnt[MSGE_NUM],TimeCntFlag[MSGE_NUM];
   6          static  XDATA INT16U AutoSwitchCnt[MSGE_NUM];
   7          
   8          extern INT8U Msge_PortSet(INT8U id,INT8U num,INT8U set);
   9          
  10          INT8U Msge_Init(Msge_Para_t *para){
  11   1              extern INT8U Msge_PortInit(INT8U id);
  12   1              return Msge_PortInit(para->id);
  13   1      }
  14          
  15          void Msge_Handle(Msge_Para_t *para){    
  16   1              if(!para)
  17   1                      return ;
  18   1              
  19   1              /*模式自动切换*/
  20   1              if(para->mode_sw_type){
  21   2                      if(AutoSwitchCnt[para->id]  > M_SWITCH_VALUES){
  22   3                              AutoSwitchCnt[para->id] = 0; 
  23   3                              TimeCnt[para->id] = 0;
  24   3                              if(para->mode ++ > M_MODE_3){
  25   4                                      Mode_SwCnt[para->id] = 0;
  26   4                                      para->mode = M_MODE_1;
  27   4                              }
  28   3                      }
  29   2              }
  30   1              
  31   1              switch(para->mode){
  32   2                      case M_MODE_1:{
  33   3                              TimeCntFlag[para->id] = True;
  34   3                              if(TimeCnt[para->id] > M_500MS){        
  35   4                                      
  36   4                                      TimeCnt[para->id] = 0;
  37   4                                      
  38   4                                      if(Mode_SwCnt[para->id] ++ >= 2){
  39   5                                              Mode_SwCnt[para->id] = 0;
  40   5                                      }
  41   4      
  42   4                                      Motor_Ctr[para->id][0] = (Mode_SwCnt[para->id] == 0) ? True:False;
  43   4                                      Motor_Ctr[para->id][1] = (Mode_SwCnt[para->id] == 1) ? True:False;
  44   4      
  45   4                              }
  46   3                              break;
  47   3                      }
  48   2      
  49   2                      case M_MODE_2:{
  50   3                              TimeCntFlag[para->id] = True;
  51   3                              if(TimeCnt[para->id] > M_1S){
  52   4                                      Mode_SwCnt[para->id] = !Mode_SwCnt[para->id];
  53   4                                      Motor_Ctr[para->id][0] = (Mode_SwCnt[para->id]) ? True:False;
  54   4                                      Motor_Ctr[para->id][1] = !Motor_Ctr[para->id][0];
C51 COMPILER V9.00   MSGE                                                                  05/24/2018 15:04:23 PAGE 2   

  55   4                                      TimeCnt[para->id] = 0;
  56   4                              }
  57   3                              break;
  58   3                      }
  59   2      
  60   2                      case M_MODE_3:{
  61   3                              TimeCntFlag[para->id] = True;
  62   3                              if(TimeCnt[para->id] > M_1S){
  63   4                                      TimeCnt[para->id] = 0;
  64   4                                      
  65   4                                      Mode_SwCnt[para->id] =!Mode_SwCnt[para->id];
  66   4                                      
  67   4                                      Motor_Ctr[para->id][0] = (Mode_SwCnt[para->id]) ? True:False;
  68   4                                      Motor_Ctr[para->id][1] = (Mode_SwCnt[para->id]) ? True:False;
  69   4                              }
  70   3                              break;
  71   3                      }
  72   2                      default:{
  73   3                              para->mode = M_MODE_1;
  74   3                              break;
  75   3                      }
  76   2              }
  77   1              return ;
  78   1      }
  79          
  80          /*****************************************************************************
  81           * Function       : Msge_TimeHandle
  82           * Description   : 定时器里面处理，时基1ms
  83           * Input           : void  
  84           * Output                 : None
  85           * Return                 : 
  86           * Others                 : 
  87           * Record
  88           * 1.Date                 : 20180420
  89           *   Author       : marco
  90           *   Modification: Created function
  91          
  92          *****************************************************************************/
  93          void Msge_TimeHandle(Msge_Para_t *para){
  94   1              if(!para)
  95   1                      return ;
  96   1              if(para->sw_sta){
  97   2                      FreCnt[para->id] ++;
  98   2                      
  99   2                      if(FreCnt[para->id] < para->intensity){
 100   3                              if(Motor_Ctr[para->id][0]){
 101   4                                      Msge_PortSet(para->id,0,1);
 102   4                              }else{
 103   4                                      Msge_PortSet(para->id,0,0);
 104   4                              }
 105   3                              if(Motor_Ctr[para->id][1]){
 106   4                                      Msge_PortSet(para->id,1,1);
 107   4                              }else{
 108   4                                      Msge_PortSet(para->id,1,0);
 109   4                              }
 110   3                      }else {
 111   3                              Msge_PortSet(para->id,0,0);
 112   3                              Msge_PortSet(para->id,1,0);
 113   3                              if(FreCnt[para->id] > 13){                              
 114   4                                      FreCnt[para->id] = 0;
 115   4                              }
 116   3                      }
C51 COMPILER V9.00   MSGE                                                                  05/24/2018 15:04:23 PAGE 3   

 117   2      
 118   2                      /*模式计时*/
 119   2                      if(TimeCntFlag[para->id]){
 120   3                              TimeCnt[para->id] ++;
 121   3                      }
 122   2                      
 123   2                      if(para->mode_sw_type){
 124   3                              AutoSwitchCnt[para->id] ++;
 125   3                      }
 126   2              }       
 127   1      }
 128          
 129          void Msge_SetIntensity(Msge_Para_t *para,INT8U set){
 130   1              if(!para)
 131   1                      return ;
 132   1              para->intensity = set;
 133   1      }
 134          
 135          void Msge_SetMode(Msge_Para_t *para,INT8U set){
 136   1              if(!para)
 137   1                      return ;
 138   1              para->mode = set;
 139   1              Mode_SwCnt[para->id] = 0; 
 140   1      }
 141          
 142          void Msge_Open(Msge_Para_t *para,INT8U run_type){
 143   1              para->sw_sta = True;
 144   1              para->mode_sw_type = run_type;
 145   1              para->mode = M_MODE_1;
 146   1              AutoSwitchCnt[para->id] = 0;
 147   1              TimeCnt[para->id] = 0; 
 148   1              TimeCntFlag[para->id] = 0;
 149   1              FreCnt[para->id] = 0;
 150   1              Mode_SwCnt[para->id] = 0;
 151   1      }
 152          
 153          void Msge_Close(Msge_Para_t *para){
 154   1              para->sw_sta = False;
 155   1              Msge_PortSet(para->id,1,0);
 156   1              Msge_PortSet(para->id,0,0);
 157   1      }
 158          
 159          INT8U Msge_GetRunSta(Msge_Para_t *para){
 160   1              return para->sw_sta;
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1174    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     20    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
