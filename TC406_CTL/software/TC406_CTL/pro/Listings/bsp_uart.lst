C51 COMPILER V9.00   BSP_UART                                                              05/24/2018 15:04:24 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE BSP_UART
OBJECT MODULE PLACED IN .\Objects\bsp_uart.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE ..\bsp\bsp_uart.c BROWSE INCDIR(..\pro;..\app;..\bsp;..\lib\inc;..\bsp\push
                    -rod;..\bsp\message;..\bsp\sw_i2c) DEBUG OBJECTEXTEND PRINT(.\Listings\bsp_uart.lst) OBJECT(.\Objects\bsp_uart.obj)

line level    source

   1          #include "bsp_uart.h"
   2          #include "sys_config.h"
   3          #include "data_type.h"
   4          
   5          #include <string.h>
   6          
   7           Bsp_Tx_t Tx_Buf[UART_NUM];
   8          
   9          /*****************************************************************************
  10           * Function       : Bsp_UartInit1
  11           * Description   : 串口初始化
  12           * Input           : void  
  13           * Output                 : None
  14           * Return                 : 
  15           * Others                 : 
  16           * Record
  17           * 1.Date                 : 20180403
  18           *   Author       : marco
  19           *   Modification: Created function
  20          
  21          *****************************************************************************/
  22          int Bsp_UartInit(unsigned char id){
  23   1              if(id == BSP_UART0_ID){
  24   2                      #ifdef UART0_ENABLE
  25   2                      SET_REG_CON(0,2);
  26   2                      SCON |= 0X50;   //设置通信方式为模式一，允许接收
  27   2                      TMCON|=0X02;
  28   2                      TMOD|=0X20;
  29   2                      PCON |= 0X80;   //SMOD=1
  30   2                      TH1=(INT8U)((SYS_FRE_SET/BSP_BAURATE)>>8);        //波特率为T1的溢出时间；
  31   2                      TL1=(INT8U)(SYS_FRE_SET/BSP_BAURATE);
  32   2                      TR1=0;
  33   2                      ET1=0;
  34   2                      EUART = 1;     //开启Uart0中断
  35   2                      return 0;
  36   2                      #endif
  37   2              }else if(id == BSP_UART1_ID){
  38   2                      #ifdef UART1_ENABLE
  39   2                      SET_REG_CON(1,3);       // 必须设置IO口，否则则为输入状态
  40   2                      P13 = 1;
  41   2                      OTCON = 0xC0;    //串行接口SSI选择Uart1通信
  42   2                      SSCON0 = 0x50;   //设置通信方式为模式一，允许接收
  43   2                      SSCON1 = (INT8U)(SYS_FRE_SET/BSP_BAURATE);   //波特率低位控制
  44   2                      SSCON2 = (INT8U)((SYS_FRE_SET/BSP_BAURATE)>>8);   //波特率高位控制
  45   2                      IE1 = 0x01;      //开启SSI中断
  46   2                      return 0;
  47   2                      #endif
  48   2              }       
  49   1              return -1;
  50   1      }
  51          
  52          /*****************************************************************************
  53           * Function       : Bsp_UartSendBuf
  54           * Description   : 串口发送数据
C51 COMPILER V9.00   BSP_UART                                                              05/24/2018 15:04:24 PAGE 2   

  55           * Input           : unsigned char id    
  56                                      unsigned char *buf  
  57                                      unsigned int len    
  58           * Output                 : None
  59           * Return                 : 
  60           * Others                 : 
  61           * Record
  62           * 1.Date                 : 20180409
  63           *   Author       : marco
  64           *   Modification: Created function
  65          
  66          *****************************************************************************/
  67          void Bsp_UartSendBuf(unsigned char id,unsigned char *buf,unsigned int len){
  68   1              if(id == BSP_UART0_ID){
  69   2                      #ifdef UART0_ENABLE
  70   2                      if(!Tx_Buf[UART_NUM0].flag){
  71   3                              if(len > BSP_UART_SIZE)
  72   3                                      return ;
  73   3                              memset((void*)&Tx_Buf[UART_NUM0],0,sizeof(Bsp_Tx_t));
  74   3                              memcpy(&Tx_Buf[UART_NUM0].buf[0],buf,len);
  75   3                              Tx_Buf[UART_NUM0].len = len;
  76   3                              Tx_Buf[UART_NUM0].flag = True;
  77   3                              TI = 0;
  78   3                              SBUF = *buf;
  79   3                      }
  80   2                      #endif
  81   2              }else if(id == BSP_UART1_ID){
  82   2                      #ifdef UART1_ENABLE
  83   2                      if(!Tx_Buf[UART_NUM1].flag){
  84   3                              if(len > BSP_UART_SIZE)
  85   3                                      return ;
  86   3                              memset((void*)&Tx_Buf[UART_NUM1],0,sizeof(Bsp_Tx_t));
  87   3                              memcpy(&Tx_Buf[UART_NUM1].buf[0],buf,len);
  88   3                              Tx_Buf[UART_NUM1].len = len;
  89   3                              Tx_Buf[UART_NUM1].flag = True;
  90   3                              /*<开启传输>*/
  91   3                              SSDAT = Tx_Buf[UART_NUM1].buf[0];
  92   3                      }
  93   2                      #endif
  94   2              }
  95   1      }
  96          
  97          
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    220    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
